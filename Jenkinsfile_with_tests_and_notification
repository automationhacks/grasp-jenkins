// Example of using Jenkins to run test ng tests annotated with groups
// https://www.jenkins.io/doc/pipeline/tour/post/

void setBuildStatus(String message, String state) {
  step([
      $class: "GitHubCommitStatusSetter",
      reposSource: [$class: "ManuallyEnteredRepositorySource", url: "https://github.com/automationhacks/grasp-jenkins"],
      contextSource: [$class: "ManuallyEnteredCommitContextSource", context: "ci/jenkins/build-status"],
      errorHandlers: [[$class: "ChangingBuildStatusErrorHandler", result: "UNSTABLE"]],
      statusResultSource: [ $class: "ConditionalStatusResultSource", results: [[$class: "AnyBuildResult", message: message, state: state]] ]
  ]);
}

pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                sh './gradlew build'
            }
        }
        stage('Test') {
            steps {
                sh './gradlew clean runTests -Dtag=${groups}'
            }
        }
    }
    post {
        always {
            echo 'Resolving Junit xml results'
            junit 'build/test-results/**/*.xml'
            archiveArtifacts artifacts: 'build/libs/**/*.jar', fingerprint: true
            // Let's clean up the workspace
            deleteDir()
        }
        success {
            echo 'Succeeded'
            setBuildStatus("Build succeeded", "SUCCESS");
        }
        unstable {
            echo 'I am unstable'
        }
        failure {
            echo 'I failed'
            setBuildStatus("Build failed", "FAILURE");

            // TODO: Add some email plugin to test this feature out
            mail to: 'automationhacks@gmail.com',
                 subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
                 body: "Something is wrong with ${env.BUILD_URL}"
        }
        changed {
            echo 'Things were different before'
        }
    }
}
